# Docker Compose configuration for Cloudflare deployment
# This configuration removes SSL certificates and related services
# since Cloudflare handles HTTPS termination

services:
  app:
    image: candy0327/obsidian-publisher-server:${VERSION:-latest}
    container_name: obsidian-publisher-app
    pull_policy: always
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - DB_PATH=${DB_PATH:-/app/data/posts.db}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://share.141029.xyz}
      - API_TOKEN=${API_TOKEN}
      - API_TOKEN_DESCRIPTION=${API_TOKEN_DESCRIPTION:-Production API access for Obsidian Publishing}
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').request({hostname:'localhost',port:3000,path:'/health',timeout:1000}).on('response',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1)).end()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: obsidian-publisher-nginx
    ports:
      - "80:80"
    volumes:
      - ./server/nginx/nginx-cloudflare.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  app_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./server/database
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./server/logs

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16